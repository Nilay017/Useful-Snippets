<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
	<title></title>
	<meta name="generator" content="LibreOffice 5.1.6.2 (Linux)"/>
	<meta name="created" content="2017-01-07T00:40:34.196235018"/>
	<meta name="changed" content="2017-01-07T00:41:53.862655773"/>
	<style type="text/css">
		@page { margin: 2cm }
		p { margin-bottom: 0.25cm; line-height: 120% }
		h1 { margin-bottom: 0.21cm }
		h1.western { font-family: "Liberation Serif", serif }
		h1.cjk { font-family: "Noto Sans CJK SC Regular"; font-size: 24pt }
		h1.ctl { font-family: "FreeSans"; font-size: 24pt }
		h3.cjk { font-family: "Noto Sans CJK SC Regular" }
		h3.ctl { font-family: "FreeSans" }
		h5.cjk { font-family: "Noto Sans CJK SC Regular" }
		h5.ctl { font-family: "FreeSans" }
		a:link { so-language: zxx }
		code.cjk { font-family: "Nimbus Mono L", monospace }
	</style>
</head>
<body lang="en-IN" dir="ltr">
<hr/>
<h1 class="western" align="center">Basic Linux Commands for Beginners</h1>
<hr/>

<h3 class="western"><a name="user-content-general"></a>General</h3>
<p><code class="western">ls</code> - lists files</p>
<ul>
	<li/>
<p><strong>Important flags</strong><br/>
<code class="western">-a</code>
	- display hidden files<br/>
<code class="western">-R</code> -
	recursively displays files<br/>
<code class="western">-l</code> -
	displays extra details like size, owner, group, date the file was
	last modified and permissions 
	</p>
</ul>
<p><code class="western">cd &lt;path&gt;</code> - change directory to
<code class="western">path</code></p>
<ul>
	<li/>
<p>Here <code class="western">path</code> may be relative or
	absolute. 
	</p>
</ul>
<p>(<code class="western">cd ..</code> - takes to parent directory<br/>
<code class="western">cd</code>
- takes to <code class="western">&lt;user&gt;</code>
directory[denoted by <code class="western">~</code>]<br/>
<code class="western">cd
-</code> - takes to the previous directory you were in)</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> <code class="western">user</code>
	directory is present in the <code class="western">home</code>
	directory which is present in the <code class="western">root</code>
	directory(denoted by <code class="western">/</code>). [<code class="western">/home/&lt;user&gt;</code>
	in Linux and <code class="western">Users/&lt;user&gt;</code> in
	macOS] Then there is no further upper directory after <code class="western">root</code>.
		</p>
</ul>
<p><code class="western">pwd</code> - print working directory. Prints
absolute path to current directory.</p>
<p><code class="western">^</code> symbol is used for representing
'ctrl' ... e.g. <code class="western">^C</code> = ctrl key + c</p>
<p><code class="western">touch &lt;filename&gt;</code>- creates a new
file with any extension we want.</p>
<p><strong>Note:</strong> <code class="western">touch</code> is a
much more advanced command and can be used to change the file access
and modification times. For more info see <code class="western">man
touch</code>.</p>
<p><code class="western">rm &lt;filename&gt;</code> - removes a
file.<br/>
<code class="western">rm -r &lt;directory&gt;</code> -
recursively removes all files in a directory. Then removes the empty
directory.<br/>
<strong>Note:</strong> This command might ask you for
permission for every file that it deletes. To prevent this use
<code class="western">-f</code>(force) flag.<br/>
<code class="western">mkdir
&lt;dir_name&gt;</code> - makes a new directory<br/>
<code class="western">rmdir
&lt;dir_name&gt;</code> - removes an <strong>empty</strong> directory</p>
<p><code class="western">cp /path/to/file /path/to/copy/to</code> -
used to copy file.<br/>
(Use <code class="western">cp -r</code> to
copy a directory recursively)<br/>
<code class="western">mv
/old/path/to/file /new/path/to/file</code> - used to move file.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> <code class="western">mv
	[old_filename] [new_filename]</code> is the best method to rename a
	file. 
	</p>
</ul>
<p><code class="western">grep [flag] &lt;text to search&gt; &lt;files
to search in&gt;</code></p>
<ul>
	<li/>
<p><strong>Important flags</strong><br/>
<code class="western">-i</code>
	- Performs case insensitive matching<br/>
<code class="western">-r</code>
	- Helps to search recursively through a directory<br/>
<code class="western">-l</code>
	- Outputs the name of the files in which the search text is
	present<br/>
<code class="western">-L</code> - Outputs the name of
	the files in which the search text is not present<br/>
<code class="western">--color=auto</code>
	- Highlights the search text in the output 
	</p>
</ul>
<p><code class="western">cut</code> - cuts out selected portions of
each line from file and writes them to the standard output.<br/>
<code class="western">cut
-c 2-5 file</code> - cut characters 2 to 5 from each line of file<br/>
<code class="western">cut
-d&quot;x&quot; -f 1 file</code> - returns each part of every line
before first occurrence of 'x' (-d is delimiter and -f is field)</p>
<p><code class="western">clear</code> or <code class="western">^l</code>
- scrolls down to an empty screen</p>
<p><code class="western">reset</code> - initialises terminal
variables to thier default value</p>
<p><code class="western">passwd &lt;username&gt;</code> - Change
password for a user</p>
<p><code class="western">find &lt;query&gt;</code> - finds files and
directories with name <code class="western">query</code> in the
current directory and its subdirectories<br/>
<code class="western">find
-d &lt;query&gt;</code> - looks for a directory with name <code class="western">query</code><br/>
<code class="western">find
-f &lt;query&gt;</code> - looks for a file with name <code class="western">query</code></p>
<p><code class="western">history</code> - shows all typed commands
history<br/>
<code class="western">history n</code> -shows last n
commands</p>
<p><code class="western">sudo &lt;command&gt;</code> - Run the
command as superuser(a.k.a. root)</p>
<p><code class="western">!&lt;text&gt;</code> - repeats a previous
command in history which started with 'text'<br/>
<code class="western">!!</code>
- repeats the previous command<br/>
<code class="western">sudo !!</code>
- repeats the previous command as superuser</p>
<p><code class="western">whoami</code> - gives the username of the
current user.<br/>
<code class="western">su &lt;username&gt;</code> -
Used to switch to a different user. This prompts for the password of
the user you switch to.<br/>
<code class="western">sudo -i</code> -
Switch to <code class="western">root</code> user. This user has
complete access to all files.</p>
<p><strong>Note:</strong> While <code class="western">sudo -i</code>
will ask you for your login password to become superuser, <code class="western">su
root</code> will ask for the root password. These are not the same.
You may have to set or change the root password by running <code class="western">sudo
passwd root</code> first.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong><code class="western">sudo</code>
	stands for <code class="western">SUperuser DO</code> and <code class="western">su</code>
	stands for <code class="western">Substitute User</code>. 
	</p>
</ul>
<p><code class="western">man &lt;command&gt;</code> - shows manual
entry for the command. Manual contains all the flags related to that
command and their use.</p>
<p><code class="western">time &lt;command&gt;</code> - gives the time
taken for the command to execute. Very useful when you want to find
the execution time of your programs.</p>
<p><code class="western">diff [file1] [file2]</code> - compares the
two files line by line. Usually used to compare ideal output and
user-generated output.<br/>
<code class="western">diff -z [file1]
[file2]</code> - Ignores trailing-whitespaces while comparing the two
files</p>
<p><code class="western">.</code> - refers to current directory<br/>
<code class="western">..</code>
- refers to parent directory</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> Files with file names starting
	with <code class="western">.</code> are hidden. 
	</p>
</ul>
<p><code class="western">echo &quot;hello&quot;</code> - prints hello
on the terminal</p>
<p><code class="western">&gt;</code> - used to store the output of a
task in some file(overwrites if file with same name is present)
rather than displaying it on the terminal.<br/>
<code class="western">&gt;&gt;</code>
- same task as <code class="western">&gt;</code> but does not
overwrites just appends to the file with the same name.</p>
<p><code class="western">|</code> - piping is used to give the output
of a command as input to another command ..for e.g <code class="western">history
| grep &quot;find&quot;</code> will search for &quot;find&quot; in
the output of <code class="western">history</code></p>
<p><code class="western">&lt;command&gt; | tee &lt;filename&gt;</code>
- used to show output of <code class="western">command</code> on
terminal as well as writing the output to a file <code class="western">filename</code>.</p>
<p><code class="western">cat</code> - used to open a file in terminal
in read-only format</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> Unless you have infinite scrolling
	turned on (available in Profile Preferences -&gt; Scrolling tab of
	the terminal), there is a limit to how many lines you can see on the
	screen. 
	</p>
</ul>
<p><code class="western">&lt;output of some command&gt; | less</code>
- allows the user to advance through the content by pressing SPACE,
move backwards by pressing 'b' and quit using 'q'. Pressing ESC
followed by SPACE allows you to scroll down one screen at a time.</p>
<p>Example: <code class="western">cat file | less</code></p>
<p><code class="western">&lt;output of some command&gt; | more</code>
- is similar to using <code class="western">less</code>, but allows
viewing one screen at a time.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> All commands typed in the terminal
	are saved in <code class="western">history</code> or the
	<code class="western">.bash_history</code> file in the home
	directory. <code class="western">history | less</code> or <code class="western">cat
	~/.bash_history</code> will let you scroll through previously typed
	commands. 
	</p>
</ul>
<hr/>

<h3 class="western"><a name="user-content-opening-files-with-common-text-editors"></a>
Opening files with common Text Editors</h3>
<p><code class="western">&lt;vim|vi|nano|emacs&gt; &lt;filename&gt;</code>
: opens a file in the respective text editor inside the
terminal.<br/>
<code class="western">gedit &lt;filename&gt;</code> :
opens a file with filename in Gedit . <code class="western">subl
&lt;filename&gt;</code> : opens a file with filename in Sublime
Text.<br/>
<code class="western">subl &lt;foldername&gt;</code>:
Opens the entire folder in Sublime Text. Very helpful when you are
working on projects with multiple file.</p>
<hr/>

<h3 class="western"><a name="user-content-running-scripts"></a>Running
Scripts</h3>
<p><code class="western">sh [path/to/script]</code> - To run a
non-executable <code class="western">sh</code> script.<br/>
<code class="western">bash
[path/to/script]</code> - To run a non-executable <code class="western">bash</code>
script<br/>
<code class="western">./&lt;location/of/executable&gt;</code>
- Just type the file location to run an executable file.</p>
<hr/>

<h3 class="western"><a name="user-content-aliases"></a>Aliases</h3>
<p>An alias is a word assigned to a statement, and acts as a keyboard
shortcut.</p>
<p><code class="western">alias py='python'</code> - would pass <code class="western">python</code>
whenever <code class="western">py</code> is entered.</p>
<p>This alias lasts as long as the terminal is running. To create a
permanent alias, append this line to <code class="western">~/.bash_profile</code>
or <code class="western">~/.bash_aliases</code>.</p>
<p><code class="western">unalias &lt;alias_name&gt;</code> - Removes
the alias. E.g. <code class="western">unalias py</code> - After this
<code class="western">py</code> would not work as <code class="western">python</code>.</p>
<hr/>

<h3 class="western"><a name="user-content-downloading"></a>Downloading</h3>
<p><code class="western">Wget</code> and <code class="western">cURL</code>
are two great utilities for downloading stuff. They are a replacement
to the Download Managers you must have used on Windows.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> <code class="western">cURL</code>
	is powered by <code class="western">libcurl</code> - a
	cross-platform library with a stable API that can be used by each
	and everyone. <code class="western">Wget</code> on the other hand is
	command line only. There's no library. 
	</p>
</ul>
<p><code class="western">wget &lt;url_to_download&gt;</code> -
Downloads the file at the specified url.<br/>
<code class="western">wget
-c &lt;url_to_download&gt;</code> - Resumes an incomplete download.
Very helpful when a large file download stops due to some error.<br/>
<code class="western">wget
--tries=100 &lt;url_to_download&gt;</code> - Set the retry download
attempts. This is very useful when the download file is large and the
internet connection has problems.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> <code class="western">wget</code>
	does 20 retries by default. 
	</p>
</ul>
<p><code class="western">wget -i &lt;download_list_file.txt&gt;</code>
- For Multiple downloads. Downloads all the files/URLs mentioned in
file.<br/>
<code class="western">wget --recursive --page-requisites
--html-extension --convert-links --no-parent &lt;URL&gt;</code> - Use
this command to download the entire website so that you can view it
offline.</p>
<ul>
	<li/>
<p style="margin-bottom: 0cm">--recursive: download the entire
	Web site. 
	</p>
	<li/>
<p style="margin-bottom: 0cm">--page-requisites: get all the
	elements that compose the page (images, CSS and so on). 
	</p>
	<li/>
<p style="margin-bottom: 0cm">--html-extension: save files
	with the .html extension. 
	</p>
	<li/>
<p style="margin-bottom: 0cm">--convert-links: convert links
	so that they work locally, off-line. 
	</p>
	<li/>
<p>--no-parent: prevents wget from downloading anything from
	the folders beneath the folder you want to acquire.</p>
	<li/>
<p><strong>Trivia:</strong> <code class="western">cURL</code>
	supports more protocols and authentication methdods than <code class="western">Wget</code>
	and is almost always pre-installed on the OS. <code class="western">Wget</code>
	on the other hand is famous because of its ability to download an
	entire website for offline view.</p>
</ul>
<p><code class="western">curl -O &lt;url_to_download&gt;</code> -
Downloads the file at the specified url.<br/>
<code class="western">curl
-O &lt;URL1&gt; -O &lt;URL2&gt;</code> - Downloads files at both
urls.<br/>
<code class="western">curl -C - -O &lt;url_to_download&gt;</code>
- Resumes an incomplete download.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> <code class="western">cURL</code>
	can also be used to upload files to <code class="western">ftp</code>
	server. Use <code class="western">curl -u &lt;ftpuser&gt;:&lt;ftppass&gt;
	-T &lt;myfile&gt; &lt;ftp://ftp.testserver.com&gt;</code> 
	</p>
</ul>
<hr/>

<h3 class="western"><a name="user-content-installation-commands"></a>Installation
Commands</h3>
<h5 class="western"><a name="user-content-debian-ubuntu-and-other-debian-based-distros"></a>
Debian, Ubuntu and other debian-based distros</h5>
<p><code class="western">apt-get install &lt;package-name&gt;</code>
- Installs a package</p>
<ul>
	<li/>
<p><strong>Important flags</strong><br/>
<code class="western">-y</code>
	- Replies <strong>yes</strong> to all confirmations <code class="western">apt-get</code>
	asks for during install. 
	</p>
</ul>
<p><code class="western">apt-cache search &lt;query&gt;</code> -
Searches package names and descriptions for the query string. Used to
find the package-names.</p>
<p><code class="western">apt-get remove &lt;package-name&gt;</code> -
Removes a package (but not the configuration files)</p>
<p><code class="western">apt-get purge &lt;package-name&gt;</code> -
Removes a package (along with the configuration files)</p>
<p><code class="western">apt-get update</code> - APT keeps a local
database on your hard drive with a list of all available packages and
where to find them. This command explicitly updates the database.</p>
<h5 class="western"><a name="user-content-fedora-red-hat-and-centos"></a>
Fedora, Red Hat and CentOS</h5>
<p><code class="western">yum install &lt;package-name&gt;</code> -
Installs a package</p>
<hr/>

<h3 class="western"><a name="user-content-changing-permissions"></a>Changing
Permissions</h3>
<p><code class="western">chmod a+x file</code> - Grants execution
permission to all users of a file.<br/>
<code class="western">chmod
a+w file</code> - Grants write permission to all users of a
file.<br/>
<code class="western">chmod a+r file</code> - Grants read
permission to all users of a file.</p>
<p>This are just examples. <code class="western">chmod</code> has a
lot of different configurations for different kinds of permissions.
For all details see its <code class="western">man</code> page.</p>
<p><code class="western">chown -R &lt;username&gt;
path/of/file/or/directory</code> - Gives the ownership of the file or
all files in the directory and its subdirectories to the mentioned
user.</p>
<hr/>

<h3 class="western"><a name="user-content-networking"></a>Networking</h3>
<p><code class="western">ifconfig</code> - when used without any
flags, used to display the status of all active network interfaces.</p>
<p><code class="western">iwconfig</code> - similar to <code class="western">ifconfig</code>,
but used for wireless network interfaces. 
</p>
<p><code class="western">ping [domain_name_or_ip_address]</code> -
Used to ping a domain name or IP address continuously. It can be
stopped by <code class="western">^C</code>. Generally used to check
if the server is up and responding.</p>
<p><code class="western">dig example.com</code> - Queries DNS servers
for information. Gives back the <code class="western">A</code> record
which points the domain name to an IP address. Using the <code class="western">+short</code>
flag returns just the IP address linked to the domain name.</p>
<p><code class="western">+nocomments</code> – Turn off the comment
lines<br/>
<code class="western">+noauthority</code> – Turn off the
authority section<br/>
<code class="western">+noadditional</code> –
Turn off the additional section<br/>
<code class="western">+nostats</code>
– Turn off the stats section<br/>
<code class="western">+noanswer</code>
– Turn off the answer section (Of course, you wouldn’t want to
turn off the answer section)</p>
<p><code class="western">dig -x [IP address]</code> - Queries and
returns a <code class="western">PTR</code> record against the IP
address queried. The PTR record helps in Reverse DNS Lookup i.e. it
provides the domain name linked to an IP address. Example <code class="western">dig
-x 127.0.0.1 +short</code> returns <code class="western">localhost.</code>.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> When you reverse lookup an IP say
	1.2.3.4, the PTR record for the domain name <code class="western">4.3.2.1.in-addr.arpa</code>,
	more generally <code class="western">reverse_ip.in-addr.arpa</code>.
	(in-addr -&gt; Inverse Address. arpa -&gt; Address and Routing
	Parameter Area)</p>
	<li/>
<p><strong>Trivia:</strong> The arpa top-level domain was the
	first domain installed in the Domain Name System (DNS).</p>
</ul>
<p><code class="western">arp</code> - It manipulates or displays the
kernel's <i>IPv4</i> network neighbour cache. It can add entries to
the table, delete one, or display the current content.</p>
<ul>
	<li/>
<p><strong>Trivia:</strong> ARP stands for Address Resolution
	Protocol. 
	</p>
</ul>
<p><code class="western">traceroute [IP address/ Domain name]</code>
tracks the route packets taken from our computer on their way to a
given host. It utilizes the IP protocol's <b>time to live</b> (TTL)
field and attempts to elicit an <code class="western">ICMP
TIME_EXCEEDED</code> response from each gateway along the path to the
host. This response contains the IP address of the gateway which are
then listed as output on the terminal.<br/>
<strong>Note:</strong>
You might see <code class="western">*</code>(asterisk) instead of IPs
sometimes. This means that the packet was not acknowledged and no
response was sent before timeout. This is generally done purposefully
to hide the identity of the servers.</p>
<p><code class="western">whois domain_name.com</code> - Generates a
long list of output regarding the server registration.</p>
<p><code class="western">netstat</code> - The netstat command
symbolically displays the contents of various network-related data
structures. It helps answer the question “What in blazes is going
on on my network?”. The columns present in the output are:</p>
<ul>
	<li/>
<p><code class="western">Proto</code> - tell us if the socket
	listed is <a href="https://www.wikiwand.com/en/Transmission_Control_Protocol">TCP</a>
	or <a href="https://www.wikiwand.com/en/User_Datagram_Protocol">UDP</a></p>
	<li/>
<p><code class="western">Recv-Q</code> and <code class="western">Send-Q</code>
	- tell us how much data is in the queue for that socket, waiting to
	be read (Recv-Q) or sent (Send-Q). In short: if this is 0,
	everything’s ok, if there are non-zero values anywhere, there may
	be trouble.</p>
	<li/>
<p><code class="western">Local Address</code> and <code class="western">Foreign
	Address</code> - tell to which hosts and ports the listed sockets
	are connected. The local end is always on the computer on which
	you’re running netstat , and the foreign end is about the other
	computer (could be somewhere in the local network or somewhere on
	the internet).<br/>
<strong>Note:</strong> The <code class="western">Foreign
	Address</code> can be <code class="western">localhost</code>
	sometimes. It means the computer is talking to itself over the
	network, so to speak. This is also known as <code class="western">loopback</code>.</p>
	<li/>
<p><code class="western">State</code> - tells in which state
	the listed sockets are. The TCP protocol defines states, including
	“LISTEN” (wait for some external computer to contact us) and
	“ESTABLISHED” (ready for communication). The stranger among
	these is the “CLOSE WAIT” state shown by two sockets. This means
	that the foreign or remote machine has already closed the
	connection, but that the local program somehow hasn’t followed
	suit. Strange states and non-empty queues(non-zero values in <code class="western">Send-Q</code>
	or <code class="western">Recv-Q</code>) often go together.</p>
</ul>
<hr/>

<h3 class="western"><a name="user-content-extracting-compressed-files"></a>
Extracting compressed files</h3>
<p><code class="western">tar -xvzf &lt;file.tar.gz&gt;</code> - used
to extract the .tar.gz file</p>
<hr/>

<h3 class="western"><a name="user-content-compressing-files"></a>Compressing
files</h3>
<p><code class="western">tar -cvzf &lt;tarballname.tar.gz&gt;
&lt;item_to_compress_1&gt; [item_to_compress_2]</code> - used to
compress any number of files into a .tar.gz compressed archive.</p>
<ul>
	<li/>
<p>tarball.tar.gz: This is the name of the final compressed
	archive. 
	</p>
</ul>
<p><code class="western">-x</code>: tar can collect files or extract
them. x does the latter.<br/>
<code class="western">-c</code>:
Collects files to be compressed<br/>
<code class="western">-v</code>:
makes tar talk a lot. Verbose output shows you all the files being
extracted.<br/>
<code class="western">-z</code>: tells tar to
decompress the archive using gzip<br/>
<code class="western">-f</code>:
this must be the last flag of the command, and the tar file must be
immediately after. It tells tar the name and path of the compressed
file.</p>
<hr/>

<h3 class="western"><a name="user-content-process-management"></a>Process
Management</h3>
<p><code class="western">top</code> - displays processor activity in
real time.</p>
<p><code class="western">ps</code> returns the snapshot of current
processes.<br/>
<code class="western">ps -e</code> returns every
process running on the system<br/>
<code class="western">ps -u
&lt;useraccount&gt;</code> returns list of processes running on user
account.<br/>
<code class="western">ps -u &lt;useraccount&gt; | grep
&lt;Application&gt;</code> - fetches all processes of &quot;Application&quot;</p>
<p style="margin-bottom: 0cm; line-height: 100%"><br/>

</p>
<p style="margin-bottom: 0cm; line-height: 100%"><br/>

</p>
<div id="js-repo-pjax-container" dir="ltr">
	<div id="readme" dir="ltr">
		<p>The leftmost number returned by the <code class="western">ps</code>
		command is called the Process ID (PID). A particular process can be
		terminated using <code class="western">kill</code></p>
		<p><code class="western">kill &lt;PID&gt;</code> - kills the
		process having PID as that entered.<br/>
<code class="western">kill
		-9 &lt;PID&gt;</code> - performs a violent kill<br/>
<code class="western">killall
		&lt;processname&gt;</code> - kills all instances of processname</p>
	</div>
</div>
<p style="margin-bottom: 0cm"><br/>

</p>
</body>
</html>
